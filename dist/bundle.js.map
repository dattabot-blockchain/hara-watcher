{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@aws/dynamodb-data-mapper\"","webpack:///external \"babel-polyfill\"","webpack:///./handler.js","webpack:///./src/WatcherController.js","webpack:///./src/network/PrivateNet.js","webpack:///./src/constants/Web3Config.js","webpack:///external \"web3\"","webpack:///./src/model/HaraBlock.js","webpack:///./src/constants/DbConfig.js","webpack:///external \"aws-sdk\""],"names":["_watch","_BlockWatcher","PrivateNet","privNet","_listenNewBlockHeader","_listenPendingBlock","console","log","subscriptionNewBlockHeader","privWeb3","eth","subscribe","error","result","web3","getBlock","hash","blockDetail","HaraBlock","_insertBlock","txHashs","transactions","length","map","txHash","key","getTransactionReceipt","txReceipt","_insertTransaction","on","privProvider","process","env","PRIV_NETWORK","Web3","providers","WebsocketProvider","_haraBlock","Object","defineProperties","prototype","DynamoDbTable","value","TB_HARA_BLOCK","DynamoDbSchema","type","keyType","blockStatus","blockHash","parentHash","sha3Uncles","miner","stateRoot","transactionsRoot","receiptsRoot","logsBloom","difficulty","number","gasLimit","gasUsed","nonce","timestamp","extraData","size","mixHash","totalDifficulty","transactionsCount","transactionHash","transactionIndex","transactionType","cumulativeGasUsed","contractAddress","logs","status","data","Promise","resolve","reject","db","_item","assign","Date","toISOString","JSON","stringify","Mapper","put","item","then","message","catch","warn","err","toString","blockNumber","tblName","AWSaccesssKeyId","AWSsecretAccessKey","AWSregion","REGION","AWSendpoint","configDB","config","accessKeyId","secretAccessKey","region","endpoint","credentials","InitDB","AWS","update","DynamoDB","DocumentClient","client","DataMapper"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"@aws/dynamodb-data-mapper\");","module.exports = require(\"babel-polyfill\");","import { _BlockWatcher } from \"./src/WatcherController\";\n\n'use strict';\n\nconst _watch = async () => {\n  await _BlockWatcher();\n};\n\n// export {\n//   _watch\n// }\n\n_watch();","import PrivateNet from \"./network/PrivateNet\";\n\nexport const _BlockWatcher = async () => {\n  const privNet = await new PrivateNet();\n  \n  privNet._listenNewBlockHeader();\n  privNet._listenPendingBlock();\n};\n","import { privWeb3 } from \"../constants/Web3Config\";\nimport HaraBlock from \"../model/HaraBlock\";\n\nexport default class PrivateNet {\n  constructor() {\n    this.web3 = privWeb3;\n    this.subscriptionNewBlockHeader;\n  }\n\n  _listenNewBlockHeader = async () => {\n    console.log(\"listen to block header\");\n    this.subscriptionNewBlockHeader = privWeb3.eth\n      .subscribe(\"newBlockHeaders\", async (error, result) => {\n        if (!error) {\n          const blockDetail = await this.web3.eth.getBlock(result.hash);\n\n          await new HaraBlock()._insertBlock(blockDetail, \"mined\");\n\n          const txHashs = blockDetail.transactions;\n\n          if (txHashs.length > 0) {\n            txHashs.map(async (txHash, key) => {\n              let txReceipt = await this.web3.eth.getTransactionReceipt(txHash);\n\n              await new HaraBlock()._insertTransaction(txReceipt);\n            });\n          }\n        }\n\n        console.error(error);\n      })\n      .on(\"error\", console.error);\n  };\n\n  _listenPendingBlock = () => {};\n}\n","import Web3 from \"web3\";\n\nexport const privProvider = process.env.PRIV_NETWORK ? process.env.PRIV_NETWORK : \"ws://ganache_priv:8546\";\nexport const privWeb3 = new Web3(new Web3.providers.WebsocketProvider(privProvider));","module.exports = require(\"web3\");","import { TB_HARA_BLOCK, InitDB, Mapper } from \"../constants/DbConfig\";\nimport { DynamoDbSchema, DynamoDbTable } from \"@aws/dynamodb-data-mapper\";\n\nclass _haraBlock {}\nObject.defineProperties(_haraBlock.prototype, {\n  [DynamoDbTable]: {\n    value: TB_HARA_BLOCK\n  },\n  [DynamoDbSchema]: {\n    value: {\n      type: {\n        type: \"String\",\n        keyType: \"HASH\"\n      },\n      hash: {\n        type: \"String\",\n        keyType: \"RANGE\"\n      },\n      blockStatus: { type: \"String\" },\n      blockHash: { type: \"String\"},\n      parentHash: { type: \"String\" },\n      sha3Uncles: { type: \"String\" },\n      miner: { type: \"String\" },\n      stateRoot: { type: \"String\" },\n      transactionsRoot: { type: \"String\" },\n      receiptsRoot: { type: \"String\" },\n      logsBloom: { type: \"String\" },\n      difficulty: { type: \"String\" },\n      number: { type: \"Number\" },\n      gasLimit: { type: \"Number\" }, \n      gasUsed: { type: \"Number\" },\n      nonce: { type: \"String\" },\n      timestamp: { type: \"String\" },\n      extraData: { type: \"String\" },\n      size: { type: \"String\" },\n      mixHash: { type: \"String\" },\n      transactions: { type: \"String\" },\n      totalDifficulty: { type: \"String\" },\n      transactionsCount: { type: \"Number\" },\n      transactionHash: { type: \"String\" },\n      transactionIndex: { type: \"Number\" },\n      transactionType: { type: \"String\" },\n      cumulativeGasUsed: { type: \"Number\" },\n      contractAddress: { type: \"String\" },\n      logs: { type: \"String\" },\n      status: { type: \"String\" },\n    }\n  }\n});\n\nexport default class HaraBlock {\n  constructor() {\n    this.tblName = TB_HARA_BLOCK;\n  }\n\n  _insertBlock = (data, blockStatus = \"pending\") => {\n    return new Promise((resolve, reject) => {\n      if (\"hash\" in data) {\n        const db = new _haraBlock();\n        let _item = Object.assign(db, data);\n        _item.blockStatus = blockStatus;\n        _item.type = \"block\";\n        _item.timestamp = new Date(_item.timestamp * 1000).toISOString();\n        _item.transactionsCount = _item.transactions.length;\n        _item.transactions = JSON.stringify(_item.transactions);\n\n        Mapper.put({ item: _item })\n          .then(() => {\n            resolve({\n              status: 1,\n              data: _item,\n              message: \"Item with Hash \" + _item.hash + \" successfull saved\"\n            });\n          })\n          .catch(err => {\n            console.warn(err.message);\n            resolve({\n              status: 0,\n              data: _item,\n              message: \"Item with Hash \" + _item.hash + \" failed saved\"\n            });\n          });\n      } else {\n        resolve({\n          status: 0,\n          message: \"there is no hash inside your data\"\n        });\n      }\n    });\n  };\n\n  _insertTransaction = (data) => {\n    return new Promise((resolve, reject) => {\n      if (\"transactionHash\" in data) {\n        const db = new _haraBlock();\n        let _item = Object.assign(db, data);\n        _item.type = \"transactions\";\n        _item.hash = _item.transactionHash;\n        _item.timestamp = new Date().toISOString();\n\n        if(_item.logs.length == 0) {\n          _item.transactionType = \"user_to_user\"\n        } else if(_item.logs.length == 1) {\n          _item.transactionType = \"contract_creation\"\n        } else {\n          _item.transactionType = \"user_to_contract\"\n        }\n\n        _item.logs = JSON.stringify(_item.logs);\n        _item.status = _item.status ? \"true\" : \"false\";\n        _item.contractAddress = _item.contractAddress ? _item.contractAddress.toString() : \"*\";\n        _item.number = _item.blockNumber;\n\n        Mapper.put({ item: _item })\n          .then(() => {\n            resolve({\n              status: 1,\n              data: _item,\n              message: \"Item with transaction Hash \" + _item.hash + \" successfull saved\"\n            });\n          })\n          .catch(err => {\n            console.warn(err.message);\n            resolve({\n              status: 0,\n              data: _item,\n              message: \"Item with transaction Hash \" + _item.hash + \" failed saved\"\n            });\n          });\n      } else {\n        resolve({\n          status: 0,\n          message: \"there is no transaction Hash inside your data\"\n        });\n      }\n    });\n  };\n}\n","import AWS from \"aws-sdk\";\nimport { DataMapper } from '@aws/dynamodb-data-mapper';\n\nconst AWSaccesssKeyId = \"not-important\";\nconst AWSsecretAccessKey = \"not-important\";\nconst AWSregion = process.env.REGION ? process.env.REGION : \"local\";\nconst AWSendpoint = \"http://dynamodb_local:8000\";\n\nexport const configDB = () => {\n  let config = {\n    accessKeyId: AWSaccesssKeyId,\n    secretAccessKey: AWSsecretAccessKey,\n    region: AWSregion,\n  }\n\n  // if(process.env.IS_DEV) {\n    config = {\n      ...config,\n      endpoint: AWSendpoint,\n      credentials: false,\n    }\n  // }\n\n  console.log(config);\n\n  return config;\n}\n\nexport const InitDB = () => {\n  AWS.config.update(configDB());\n\n  return new AWS.DynamoDB.DocumentClient();\n};\n\nconst client = new AWS.DynamoDB(configDB());\nexport const Mapper = new DataMapper({client});\n\nexport const TB_HARA_BLOCK = process.env.TB_HARA_BLOCK ? process.env.TB_HARA_BLOCK : \"hara_block_dev\" ;\n\n","module.exports = require(\"aws-sdk\");"],"sourceRoot":""}