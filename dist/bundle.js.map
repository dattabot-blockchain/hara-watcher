{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./handler.js","webpack:///./src/WatcherController.js","webpack:///./src/constants/DbConfig.js","webpack:///./src/constants/Web3Config.js","webpack:///./src/model/HaraBlock.js","webpack:///./src/network/PrivateNet.js","webpack:///external \"@aws/dynamodb-data-mapper\"","webpack:///external \"aws-sdk\"","webpack:///external \"babel-polyfill\"","webpack:///external \"web3\""],"names":["_watch","console","log","_BlockWatcher","PrivateNet","privNet","_listenNewBlockHeader","AWSaccesssKeyId","process","env","AWS_ACCESS_KEY_ID","AWSsecretAccessKey","AWS_SECRET_ACCESS_KEY","AWSregion","REGION","AWSendpoint","DB_ENDPOINT","configDB","config","accessKeyId","secretAccessKey","region","IS_DEV","endpoint","credentials","InitDB","AWS","update","DynamoDB","DocumentClient","client","Mapper","DataMapper","TB_HARA_BLOCK","privProvider","PRIV_NETWORK","privWeb3","Web3","providers","WebsocketProvider","_haraBlock","Object","defineProperties","prototype","DynamoDbTable","value","DynamoDbSchema","type","keyType","hash","blockStatus","blockHash","parentHash","sha3Uncles","miner","stateRoot","transactionsRoot","receiptsRoot","logsBloom","difficulty","number","gasLimit","gasUsed","gasPrice","gas","nonce","timestamp","extraData","size","mixHash","transactions","totalDifficulty","transactionsCount","transactionHash","transactionIndex","transactionType","cumulativeGasUsed","contractAddress","address","logs","status","from","to","flow","input","HaraBlock","_insertLastBlockDetail","Promise","resolve","reject","db","blockNumber","put","item","then","data","catch","warn","err","message","_insertBlock","_item","assign","Date","toISOString","length","JSON","stringify","_insertTransaction","txReceipt","txDetail","timeStamp","parseInt","error","_insertPendingTransaction","txHash","_getTxData","get","val","result","tblName","subscriptionNewBlockHeader","eth","subscribe","web3","getBlock","blockDetail","txHashs","map","key","getTransactionReceipt","getTransaction","on","_listenPendingBlock","subscriptionPendingTransactions","modelHaraBlock","checkDB"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { _BlockWatcher } from \"./src/WatcherController\";\n\n'use strict';\n\nconst _watch = async () => {\n  console.log(\"running watch\");\n  await _BlockWatcher();\n};\n\n_watch();","import PrivateNet from \"./network/PrivateNet\";\n\nexport const _BlockWatcher = async () => {\n  const privNet = await new PrivateNet();\n  \n  privNet._listenNewBlockHeader();\n  // privNet._listenPendingBlock();\n};\n","import AWS from \"aws-sdk\";\nimport { DataMapper } from \"@aws/dynamodb-data-mapper\";\n\nconst AWSaccesssKeyId = process.env.AWS_ACCESS_KEY_ID\n  ? process.env.AWS_ACCESS_KEY_ID\n  : \"not-important\";\nconst AWSsecretAccessKey = process.env.AWS_SECRET_ACCESS_KEY\n  ? process.env.AWS_SECRET_ACCESS_KEY\n  : \"not-important\";\nconst AWSregion = process.env.REGION ? process.env.REGION : \"local\";\nconst AWSendpoint =\n  process.env.DB_ENDPOINT !== 'undefined' && process.env.DB_ENDPOINT\n    ? process.env.DB_ENDPOINT\n    : \"http://192.168.99.100:8000\";\n\nexport const configDB = () => {\n  let config = {\n    accessKeyId: AWSaccesssKeyId,\n    secretAccessKey: AWSsecretAccessKey,\n    region: AWSregion\n  };\n\n  if (process.env.IS_DEV == \"true\" || typeof process.env.IS_DEV === \"undefined\") {\n    config = {\n      ...config,\n      endpoint: AWSendpoint,\n      credentials: false\n    };\n  }\n\n  console.log(config);\n\n  return config;\n};\n\nexport const InitDB = () => {\n  AWS.config.update(configDB());\n\n  return new AWS.DynamoDB.DocumentClient();\n};\n\nconst client = new AWS.DynamoDB(configDB());\nexport const Mapper = new DataMapper({ client });\n\nexport const TB_HARA_BLOCK = process.env.TB_HARA_BLOCK\n  ? process.env.TB_HARA_BLOCK\n  : \"hara_block_dev\";\n","import Web3 from \"web3\";\n\nexport const privProvider = process.env.PRIV_NETWORK ? process.env.PRIV_NETWORK : \"ws://localhost:8546\";\nexport const privWeb3 = new Web3(new Web3.providers.WebsocketProvider(privProvider));","import { TB_HARA_BLOCK, InitDB, Mapper } from \"../constants/DbConfig\";\nimport { DynamoDbSchema, DynamoDbTable } from \"@aws/dynamodb-data-mapper\";\n\nclass _haraBlock {}\nObject.defineProperties(_haraBlock.prototype, {\n  [DynamoDbTable]: {\n    value: TB_HARA_BLOCK\n  },\n  [DynamoDbSchema]: {\n    value: {\n      type: {\n        type: \"String\",\n        keyType: \"HASH\"\n      },\n      hash: {\n        type: \"String\",\n        keyType: \"RANGE\"\n      },\n      blockStatus: { type: \"String\" },\n      blockHash: { type: \"String\" },\n      parentHash: { type: \"String\" },\n      sha3Uncles: { type: \"String\" },\n      miner: { type: \"String\" },\n      stateRoot: { type: \"String\" },\n      transactionsRoot: { type: \"String\" },\n      receiptsRoot: { type: \"String\" },\n      logsBloom: { type: \"String\" },\n      difficulty: { type: \"String\" },\n      number: { type: \"Number\" },\n      gasLimit: { type: \"Number\" },\n      gasUsed: { type: \"Number\" },\n      gasPrice: { type: \"Number\" },\n      gas: { type: \"Number\" },\n      nonce: { type: \"String\" },\n      timestamp: { type: \"String\" },\n      extraData: { type: \"String\" },\n      size: { type: \"String\" },\n      mixHash: { type: \"String\" },\n      transactions: { type: \"String\" },\n      totalDifficulty: { type: \"String\" },\n      transactionsCount: { type: \"Number\" },\n      transactionHash: { type: \"String\" },\n      transactionIndex: { type: \"Number\" },\n      transactionType: { type: \"String\" },\n      cumulativeGasUsed: { type: \"Number\" },\n      contractAddress: { type: \"String\" },\n      address: { type: \"String\" },\n      logs: { type: \"String\" },\n      status: { type: \"String\" },\n      from: { type: \"String\" },\n      to: { type: \"String\" },\n      flow: {type: \"String\"},\n      value: { type: \"Number\" },\n      input: { type: \"String\" }\n    }\n  }\n});\n\nexport default class HaraBlock {\n  constructor() {\n    this.tblName = TB_HARA_BLOCK;\n  }\n\n  _insertLastBlockDetail = blockNumber => {\n    return new Promise((resolve, reject) => {\n      let db = new _haraBlock();\n      db.type = \"last_block_number\";\n      db.hash = \"*\";\n      db.number = blockNumber;\n      0xD51Cef892A6F599b4FFf13D233E5abB99dAd52Bd\n      Mapper.put({ item: db })\n        .then(() => {\n          resolve({\n            status: 1,\n            data: db\n          });\n        })\n        .catch(err => {\n          console.warn(err.message);\n          resolve({\n            status: 0,\n            data: db\n          });\n        });\n    });\n  };\n\n  _insertBlock = (data, blockStatus = \"pending\") => {\n    return new Promise((resolve, reject) => {\n      if (\"hash\" in data) {\n        const db = new _haraBlock();\n        let _item = Object.assign(db, data);\n        _item.blockStatus = blockStatus;\n        _item.type = \"block\";\n        _item.timestamp = new Date(_item.timestamp * 1000).toISOString();\n        _item.transactionsCount = _item.transactions.length;\n        _item.transactions = JSON.stringify(_item.transactions);\n\n        Mapper.put({ item: _item })\n          .then(() => {\n            resolve({\n              status: 1,\n              data: _item,\n              message: \"Item with Hash \" + _item.hash + \" successfull saved\"\n            });\n          })\n          .catch(err => {\n            console.warn(err.message);\n            resolve({\n              status: 0,\n              data: _item,\n              message: \"Item with Hash \" + _item.hash + \" failed saved\"\n            });\n          });\n      } else {\n        resolve({\n          status: 0,\n          message: \"there is no hash inside your data\"\n        });\n      }\n    });\n  };\n\n  _insertTransaction = (txReceipt, txDetail, gasLimit, timeStamp) => {\n    return new Promise((resolve, reject) => {\n      if (\"transactionHash\" in txReceipt) {\n        try {\n          const db = new _haraBlock();\n          let _item = Object.assign(db, txReceipt);\n          _item.type = \"transaction\";\n          _item.hash = _item.transactionHash;\n          \n          let address = typeof _item.logs[0].address !== \"undefined\" ?  _item.logs[0].address : \"\";\n\n          // now join txDetail\n          _item = Object.assign(_item, txDetail);\n          _item.gasPrice = parseInt(_item.gasPrice);\n          _item.value = parseInt(_item.value);\n          _item.gasLimit = parseInt(gasLimit);\n          if(_item.to == address){\n            _item.flow = \"in\";\n          }else{\n            _item.flow = \"out\";\n          }\n          \n\n          if (_item.logs.length == 0) {\n            _item.transactionType = \"user_to_user\";\n          } else if (_item.logs.length == 1) {\n            _item.transactionType = \"contract_creation\";\n          } else {\n            _item.transactionType = \"user_to_contract\";\n          }\n\n          _item.to = _item.to ? _item.to : \"false\";\n          _item.logs = JSON.stringify(_item.logs);\n          _item.status = _item.status ? \"true\" : \"false\";\n          _item.contractAddress = _item.contractAddress\n            ? _item.contractAddress\n            : \"*\";\n          _item.number = _item.blockNumber;\n          _item.timestamp = new Date(timeStamp * 1000).toISOString();\n\n          Mapper.put({ item: _item })\n            .then(() => {\n              console.log(\"success hash\" + _item.hash);\n              resolve({\n                status: 1,\n                data: _item,\n                message:\n                  \"Item with transaction Hash \" +\n                  _item.hash +\n                  \" successfull saved\"\n              });\n            })\n            .catch(err => {\n              console.warn(err.message);\n              resolve({\n                status: 0,\n                data: _item,\n                message:\n                  \"Item with transaction Hash \" + _item.hash + \" failed saved\"\n              });\n            });\n        } catch (error) {\n          console.error(error);\n        }\n      } else {\n        resolve({\n          status: 0,\n          message: \"there is no transaction Hash inside your data\"\n        });\n      }\n    });\n  };\n\n  _insertPendingTransaction = txHash => {\n    return new Promise((resolve, reject) => {\n      let db = new _haraBlock();\n      db.type = \"transaction\";\n      db.hash = txHash;\n      db.status = \"pending\";\n\n      Mapper.put({ item: db })\n        .then(() => {\n          resolve({\n            status: 1,\n            data: db,\n            message: \"Item with transaction Hash \" + db.hash + \" is Pending\"\n          });\n        })\n        .catch(err => {\n          console.warn(err.message);\n          resolve({\n            status: 0,\n            data: db,\n            message:\n              \"Item with transaction Hash \" +\n              db.hash +\n              \" is pending failed to saved\"\n          });\n        });\n    });\n  };\n\n  _getTxData = async txHash => {\n    let db = new _haraBlock();\n    db.type = \"transaction\";\n    db.hash = txHash;\n\n    let result = await new Promise((resolve, reject) => {\n      Mapper.get({ item: db })\n        .then(val => {\n          resolve(val);\n        })\n        .catch(err => {\n          resolve(false);\n        });\n    });\n\n    if (result) {\n      return result;\n    }\n\n    return false;\n  };\n}\n","import { privWeb3 } from \"../constants/Web3Config\";\nimport HaraBlock from \"../model/HaraBlock\";\n\nexport default class PrivateNet {\n  constructor() {\n    this.web3 = privWeb3;\n    this.subscriptionNewBlockHeader;\n    this.subscriptionPendingTransactions;\n  }\n  \n  _listenNewBlockHeader = async () => {\n    this.subscriptionNewBlockHeader = privWeb3.eth\n      .subscribe(\"newBlockHeaders\", async (error, result) => {\n        if (!error) {\n          const blockDetail = await this.web3.eth.getBlock(result.hash);\n          const blockNumber = blockDetail.number;\n          const gasLimit    = blockDetail.gasLimit;\n          const timeStamp   = blockDetail.timestamp;\n\n          await new HaraBlock()._insertLastBlockDetail(blockNumber);\n          await new HaraBlock()._insertBlock(blockDetail, \"mined\");\n\n          const txHashs = blockDetail.transactions;\n\n          if (txHashs.length > 0) {\n            txHashs.map(async (txHash, key) => {\n              let txReceipt = await this.web3.eth.getTransactionReceipt(txHash);\n              let txDetail  = await this.web3.eth.getTransaction(txHash);\n              console.log(\"txReceipt\");\n              console.log(txReceipt);\n              console.log(\"txDetail\");\n              console.log(txDetail);\n              await new HaraBlock()._insertTransaction(txReceipt, txDetail, gasLimit, timeStamp);\n            });\n          }\n        } else {\n          console.error(error);\n        }\n\n      })\n      .on(\"error\", console.error);\n  };\n\n  _listenPendingBlock = () => {\n    this.subscriptionPendingTransactions = privWeb3.eth\n      .subscribe(\"pendingTransactions\", async (error, result) => {\n        let txHash = result;\n        const modelHaraBlock = new HaraBlock();\n\n        let checkDB = await modelHaraBlock._getTxData(txHash);\n\n        if (checkDB === false) {\n          await modelHaraBlock._insertPendingTransaction(txHash);\n        }\n      })\n      .on(\"error\", console.error);\n  };\n\n}\n","module.exports = require(\"@aws/dynamodb-data-mapper\");","module.exports = require(\"aws-sdk\");","module.exports = require(\"babel-polyfill\");","module.exports = require(\"web3\");"],"sourceRoot":""}